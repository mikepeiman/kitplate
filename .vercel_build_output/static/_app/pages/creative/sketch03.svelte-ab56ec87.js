import{S as le,i as ae,s as re,j as y,m as C,o as S,x as N,u as x,v as T,Q as q,R as L,k as E,n as F,f as H,U as O,d as A,a3 as D,a8 as ee,a7 as K}from"../../chunks/vendor-51fd7836.js";import{C as he}from"../../chunks/ColorInput.svelte_svelte_type_style_lang-a830da3e.js";import{S as se,C as te}from"../../chunks/Checkbox-f2313987.js";import{O as ne}from"../../chunks/OptionSelect-3c8b587e.js";import"../../chunks/stores-3b6d2ba6.js";/* empty css                                                              */function ce(n){let a,u,h,o,s,M,f,I,v,_,R,w,m,V,P,g,W,j;function B(e){n[5](e)}let Q={label:"Range",min:"10",max:"500",step:"10"};n[1].range!==void 0&&(Q.value=n[1].range),a=new se({props:Q}),q.push(()=>L(a,"value",B));function i(e){n[6](e)}let t={label:"Number of nodes",min:"10",max:"1000",step:"10"};n[1].numNodes!==void 0&&(t.value=n[1].numNodes),o=new se({props:t}),q.push(()=>L(o,"value",i)),o.$on("change",n[3](ie,oe));function l(e){n[7](e)}let c={items:n[1].lineCaps};n[1].lineCap!==void 0&&(c.selected=n[1].lineCap),f=new ne({props:c}),q.push(()=>L(f,"selected",l));function d(e){n[8](e)}let p={items:n[1].nodeTypes};n[1].nodeType!==void 0&&(p.selected=n[1].nodeType),_=new ne({props:p}),q.push(()=>L(_,"selected",d));function k(e){n[9](e)}let $={label:"Show nodes"};n[1].showNodes!==void 0&&($.checked=n[1].showNodes),m=new te({props:$}),q.push(()=>L(m,"checked",k));function b(e){n[10](e)}let U={label:"Show lines"};return n[1].showLines!==void 0&&(U.checked=n[1].showLines),g=new te({props:U}),q.push(()=>L(g,"checked",b)),{c(){y(a.$$.fragment),h=E(),y(o.$$.fragment),M=E(),y(f.$$.fragment),v=E(),y(_.$$.fragment),w=E(),y(m.$$.fragment),P=E(),y(g.$$.fragment)},l(e){C(a.$$.fragment,e),h=F(e),C(o.$$.fragment,e),M=F(e),C(f.$$.fragment,e),v=F(e),C(_.$$.fragment,e),w=F(e),C(m.$$.fragment,e),P=F(e),C(g.$$.fragment,e)},m(e,r){S(a,e,r),H(e,h,r),S(o,e,r),H(e,M,r),S(f,e,r),H(e,v,r),S(_,e,r),H(e,w,r),S(m,e,r),H(e,P,r),S(g,e,r),j=!0},p(e,r){const z={};!u&&r&2&&(u=!0,z.value=e[1].range,O(()=>u=!1)),a.$set(z);const X={};!s&&r&2&&(s=!0,X.value=e[1].numNodes,O(()=>s=!1)),o.$set(X);const G={};r&2&&(G.items=e[1].lineCaps),!I&&r&2&&(I=!0,G.selected=e[1].lineCap,O(()=>I=!1)),f.$set(G);const J={};r&2&&(J.items=e[1].nodeTypes),!R&&r&2&&(R=!0,J.selected=e[1].nodeType,O(()=>R=!1)),_.$set(J);const Y={};!V&&r&2&&(V=!0,Y.checked=e[1].showNodes,O(()=>V=!1)),m.$set(Y);const Z={};!W&&r&2&&(W=!0,Z.checked=e[1].showLines,O(()=>W=!1)),g.$set(Z)},i(e){j||(N(a.$$.fragment,e),N(o.$$.fragment,e),N(f.$$.fragment,e),N(_.$$.fragment,e),N(m.$$.fragment,e),N(g.$$.fragment,e),j=!0)},o(e){x(a.$$.fragment,e),x(o.$$.fragment,e),x(f.$$.fragment,e),x(_.$$.fragment,e),x(m.$$.fragment,e),x(g.$$.fragment,e),j=!1},d(e){T(a,e),e&&A(h),T(o,e),e&&A(M),T(f,e),e&&A(v),T(_,e),e&&A(w),T(m,e),e&&A(P),T(g,e)}}}function ue(n){let a,u;return a=new he({props:{sketch:n[4],settings:n[2],data:n[1],hidePanel:n[0],$$slots:{default:[ce]},$$scope:{ctx:n}}}),{c(){y(a.$$.fragment)},l(h){C(a.$$.fragment,h)},m(h,o){S(a,h,o),u=!0},p(h,[o]){const s={};o&2&&(s.data=h[1]),o&1&&(s.hidePanel=h[0]),o&1048578&&(s.$$scope={dirty:o,ctx:h}),a.$set(s)},i(h){u||(N(a.$$.fragment,h),u=!0)},o(h){x(a.$$.fragment,h),u=!1},d(h){T(a,h)}}}let ie=2048,oe=2048;function pe(n,a,u){let{hidePanel:h=!1}=a,o=[];const s={TITLE:"Sketch03",numNodes:200,range:200,lineCap:"butt",lineCaps:[{value:"butt",label:"butt"},{value:"round",label:"round"}],showNodes:!1,showLines:!0,nodeType:"hex",nodeTypes:[{value:"hex",label:"hex"},{value:"circle",label:"circle"}],lineWidthMax:5,radiusMin:10,radiusMax:30,animate:!0},M={dimensions:[ie,oe]},f=(i,t)=>{if(s.numNodes>o.length)for(let l=0;l<s.numNodes-o.length;l++){let c=D.range(0,i),d=D.range(0,t),p=new R(c,d);o=[...o,p]}else for(let l=0;l<o.length-s.numNodes;l++)o.pop()},I=({context:i,width:t,height:l})=>{let c=i;f(t,l);for(let d=0;d<o.length;d++){const p=o[d];for(let k=d+1;k<o.length;k++){const $=o[k],b=p.pos.getDistance($.pos);if(b>s.range)continue;c.lineWidth=ee.mapRange(b,0,s.range,s.lineWidthMax,1),c.beginPath(),c.moveTo(p.pos.x,p.pos.y),s.showLines&&c.lineTo($.pos.x,$.pos.y);let U=V(s.range,b),e=K.parse(p.color).hsla[0],r=K.parse(p.color).hsla[1],z=K.parse(p.color).hsla[2];c.strokeStyle=m(e,r,z,U),c.lineCap=s.lineCap,c.stroke()}}return({context:d,width:p,height:k})=>{let $=d;$.fillStyle="black",$.fillRect(0,0,p,k),s.numNodes!=o.length,o.forEach(b=>{b.update(),s.showNodes&&(s.nodeType=="hex"?b.drawHex($):b.drawCircle($)),b.wrap(p,k)})}};class v{constructor(t,l){this.x=t,this.y=l}getDistance(t){const l=this.x-t.x,c=this.y-t.y;return Math.sqrt(l*l+c*c)}}class _{constructor(t,l){this.pos=new v(t,l),this.vel=new v(D.range(-1,1),D.range(-1,1)),this.radius=D.range(s.radiusMin,s.radiusMax)}update(){this.pos.x+=this.vel.x,this.pos.y+=this.vel.y}bounce(t,l){(this.pos.x<=0||this.pos.x>=t)&&(this.vel.x*=-1),(this.pos.y<=0||this.pos.y>=l)&&(this.vel.y*=-1)}wrap(t,l){this.pos.x=(this.pos.x+t)%t,this.pos.y=(this.pos.y+l)%l}drawCircle(t){t.save(),t.translate(this.pos.x,this.pos.y),t.beginPath(),t.arc(0,0,this.radius,0,Math.PI*2),t.fill(),t.lineWidth=4,t.strokeStyle=this.color,t.stroke(),t.restore()}}class R extends _{constructor(t,l,c=6,d=0,p="hsla(180,50%,50%,1)"){super(t,l);this.numOfSides=c,this.positiveVelSum=parseFloat(w(this.vel.x).toFixed(3)+w(this.vel.y).toFixed(3)),this.color=m(this.positiveVelSum*360%360,50,50,1)}drawHex(t){t.save(),t.beginPath(),t.moveTo(this.pos.x+this.radius*Math.cos(0),this.pos.y+this.radius*Math.sin(0));for(let l=0;l<this.numOfSides;l++){let c=this.pos.x+this.radius*Math.cos(l*2*Math.PI/this.numOfSides),d=this.pos.y+this.radius*Math.sin(l*2*Math.PI/this.numOfSides);t.lineTo(c,d),t.fillStyle=this.color}t.fill(),t.restore()}}const w=i=>i<0?i*-1:i,m=(i,t,l,c)=>`hsla(${i},${t}%,${l}%,${c})`,V=(i,t)=>ee.mapRange(t,0,i,1,0,!0);function P(i){n.$$.not_equal(s.range,i)&&(s.range=i,u(1,s))}function g(i){n.$$.not_equal(s.numNodes,i)&&(s.numNodes=i,u(1,s))}function W(i){n.$$.not_equal(s.lineCap,i)&&(s.lineCap=i,u(1,s))}function j(i){n.$$.not_equal(s.nodeType,i)&&(s.nodeType=i,u(1,s))}function B(i){n.$$.not_equal(s.showNodes,i)&&(s.showNodes=i,u(1,s))}function Q(i){n.$$.not_equal(s.showLines,i)&&(s.showLines=i,u(1,s))}return n.$$set=i=>{"hidePanel"in i&&u(0,h=i.hidePanel)},n.$$.update=()=>{n.$$.dirty&2},[h,s,M,f,I,P,g,W,j,B,Q]}class be extends le{constructor(a){super();ae(this,a,pe,ue,re,{hidePanel:0})}}export{be as default};
